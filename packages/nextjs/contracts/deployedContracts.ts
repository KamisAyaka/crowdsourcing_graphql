/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  11155111: {
    TaskToken: {
      address: "0xC60094551BE157Ce85a765739663E70eC868D81B",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_name",
              type: "string",
              internalType: "string",
            },
            {
              name: "_symbol",
              type: "string",
              internalType: "string",
            },
            {
              name: "decimals_",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "FAUCET_MINT_AMOUNT",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "allowance",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approve",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "burn",
          inputs: [
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "decimals",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint8",
              internalType: "uint8",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "faucetMint",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "mint",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "name",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "symbol",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalSupply",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transfer",
          inputs: [
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferFrom",
          inputs: [
            {
              name: "from",
              type: "address",
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "Approval",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "spender",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Transfer",
          inputs: [
            {
              name: "from",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "to",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "ERC20InsufficientAllowance",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
            {
              name: "allowance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InsufficientBalance",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
            {
              name: "balance",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "needed",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidApprover",
          inputs: [
            {
              name: "approver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidReceiver",
          inputs: [
            {
              name: "receiver",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSender",
          inputs: [
            {
              name: "sender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ERC20InvalidSpender",
          inputs: [
            {
              name: "spender",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {
        allowance: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        approve: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        balanceOf: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        decimals: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        name: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        symbol: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        totalSupply: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        transfer: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        transferFrom: "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        owner: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        renounceOwnership: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        transferOwnership: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 1,
    },
    DisputeResolver: {
      address: "0x75460477F10a92fb4444b7cb3C82A2d77220c54F",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_taskToken",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DenominatorFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "adminStakeAmount",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "adminStatus",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "stakeAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "isActive",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "approveProposal",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "disputeCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "disputeProcessingRewardBps",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "disputes",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "rewardAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "workerShare",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "taskContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "worker",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "workerApproved",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "creatorApproved",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum DisputeResolver.DisputeStatus",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "distributeFunds",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "fileDispute",
          inputs: [
            {
              name: "_taskContract",
              type: "address",
              internalType: "address",
            },
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_worker",
              type: "address",
              internalType: "address",
            },
            {
              name: "_taskCreator",
              type: "address",
              internalType: "address",
            },
            {
              name: "_rewardAmount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getAdminStake",
          inputs: [
            {
              name: "_admin",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDispute",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct DisputeResolver.Dispute",
              components: [
                {
                  name: "taskId",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "rewardAmount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "workerShare",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "taskContract",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "worker",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "taskCreator",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "workerApproved",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "creatorApproved",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum DisputeResolver.DisputeStatus",
                },
                {
                  name: "votes",
                  type: "tuple[]",
                  internalType: "struct DisputeResolver.AdminVote[]",
                  components: [
                    {
                      name: "admin",
                      type: "address",
                      internalType: "address",
                    },
                    {
                      name: "workerShare",
                      type: "uint256",
                      internalType: "uint256",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getDisputeProcessingRewardBps",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "hasVotedOnDispute",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "processVotes",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "rejectProposal",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "stakeToBecomeAdmin",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "taskToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "voteOnDispute",
          inputs: [
            {
              name: "_disputeId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_workerShare",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawStake",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DisputeResolver_AdminStaked",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_AdminVoted",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "workerShare",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_AdminWithdrawn",
          inputs: [
            {
              name: "admin",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_DisputeFiled",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskContract",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "worker",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "taskCreator",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "rewardAmount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_DisputeResolved",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "workerShare",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_FundsDistributed",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_ProposalApprovedByCreator",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "taskCreator",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_ProposalApprovedByWorker",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "worker",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolver_ProposalRejected",
          inputs: [
            {
              name: "disputeId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "DisputeResolver_AlreadyApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_AlreadyStaked",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_AlreadyVoted",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_DisputeNotResolved",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_InvalidTaskContract",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_InvalidTaskToken",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_InvalidWorkerShare",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_NoActiveDispute",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_NotAdmin",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_NotEnoughVotes",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_OnlyDisputeParty",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_ProposalNotApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "DisputeResolver_ZeroReward",
          inputs: [],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
      ],
      inheritedFunctions: {
        owner: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        renounceOwnership: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        transferOwnership: "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
      },
      deployedOnBlock: 2,
    },
    UserInfo: {
      address: "0xA1134b21b0FC9B0313D149FbE51249EEd429A482",
      abi: [
        {
          type: "function",
          name: "updateUserProfile",
          inputs: [
            {
              name: "name",
              type: "string",
              internalType: "string",
            },
            {
              name: "email",
              type: "string",
              internalType: "string",
            },
            {
              name: "bio",
              type: "string",
              internalType: "string",
            },
            {
              name: "website",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updateUserSkills",
          inputs: [
            {
              name: "skills",
              type: "string[]",
              internalType: "string[]",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "UserProfileUpdated",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "name",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "email",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "bio",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "website",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "UserSkillsUpdated",
          inputs: [
            {
              name: "user",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "skills",
              type: "string[]",
              indexed: false,
              internalType: "string[]",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "UserInfo_EmptyName",
          inputs: [],
        },
      ],
      inheritedFunctions: {},
      deployedOnBlock: 2,
    },
    FixedPaymentTask: {
      address: "0x4Ab860E65e934EdD1191e6Ee6C3561D304f5F9b2",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_taskToken",
              type: "address",
              internalType: "contract IERC20",
            },
            {
              name: "_disputeResolver",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DenominatorFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "addWorker",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_worker",
              type: "address",
              internalType: "address",
            },
            {
              name: "_reward",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveProofOfWork",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changedeadline",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createTask",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "disputeResolver",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "fileDisputeByWorker",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct BaseTask.Task",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalreward",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "deadline",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum BaseTask.TaskStatus",
                },
                {
                  name: "creator",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "worker",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "increaseReward",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_reward",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "paused",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "payTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "platformFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitProofOfWork",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "taskCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskWorkProof",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "submitted",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "submittedAt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tasks",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalreward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum BaseTask.TaskStatus",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "worker",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "terminateTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "totalPlatformRevenue",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unpause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updatePlatformFee",
          inputs: [
            {
              name: "_newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawPlatformRevenue",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DisputeResolverUpdated",
          inputs: [
            {
              name: "oldResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "newResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTaskCreated",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "deadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_ProofOfWorkApproved",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_ProofOfWorkSubmitted",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_TaskCancelled",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_TaskPaid",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_TaskWorkerAdded",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "worker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "reward",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "FixedPaymentTask_TaskWorkerRemoved",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "worker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Paused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PlatformFeeUpdated",
          inputs: [
            {
              name: "oldFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RewardIncreased",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskDeadlineChanged",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDeadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Unpaused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WithdrawPlatformRevenue",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "BaseTask_InvalidDisputeResolver",
          inputs: [],
        },
        {
          type: "error",
          name: "BaseTask_InvalidTaskToken",
          inputs: [],
        },
        {
          type: "error",
          name: "EnforcedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "ExpectedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "FeeTooHigh",
          inputs: [
            {
              name: "newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "FixedPaymentTask_DisputeTimeNotReached",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_InvalidWorkerAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_NoProofOfWorkSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_OnlyOneWorkerAllowed",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_ProofAlreadyApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_ProofNotSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_ProofOfWorkEmpty",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_TaskCannotBeCancelled",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_TaskDeadlinePassed",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_TaskNotCompleted",
          inputs: [],
        },
        {
          type: "error",
          name: "FixedPaymentTask_TaskNotOpen",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidDeadline",
          inputs: [],
        },
        {
          type: "error",
          name: "NoRevenueToWithdraw",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyTaskCreator",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OnlyTaskWorker",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "RewardMoreThanZero",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "TaskNotInProgress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        DenominatorFee: "contracts/BaseTask.sol",
        changedeadline: "contracts/BaseTask.sol",
        createTask: "contracts/BaseTask.sol",
        disputeResolver: "contracts/BaseTask.sol",
        getTask: "contracts/BaseTask.sol",
        owner: "contracts/BaseTask.sol",
        pause: "contracts/BaseTask.sol",
        paused: "contracts/BaseTask.sol",
        platformFee: "contracts/BaseTask.sol",
        renounceOwnership: "contracts/BaseTask.sol",
        taskCounter: "contracts/BaseTask.sol",
        taskToken: "contracts/BaseTask.sol",
        tasks: "contracts/BaseTask.sol",
        terminateTask: "contracts/BaseTask.sol",
        totalPlatformRevenue: "contracts/BaseTask.sol",
        transferOwnership: "contracts/BaseTask.sol",
        unpause: "contracts/BaseTask.sol",
        updatePlatformFee: "contracts/BaseTask.sol",
        withdrawPlatformRevenue: "contracts/BaseTask.sol",
      },
      deployedOnBlock: 3,
    },
    BiddingTask: {
      address: "0x4524cc34CA526e42907C1cd4732dc4ED3f90a458",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_taskToken",
              type: "address",
              internalType: "contract IERC20",
            },
            {
              name: "_disputeResolver",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DenominatorFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "acceptBid",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_bidIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveProofOfWork",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changedeadline",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "createTask",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "disputeResolver",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "fileDisputeByWorker",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getBid",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_bidIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct BiddingTask.Bid",
              components: [
                {
                  name: "bidder",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "amount",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "estimatedTime",
                  type: "uint256",
                  internalType: "uint256",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct BaseTask.Task",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalreward",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "deadline",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum BaseTask.TaskStatus",
                },
                {
                  name: "creator",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "worker",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "increaseReward",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_reward",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "paused",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "payTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "platformFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitBid",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_estimatedTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitProofOfWork",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "taskBids",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "bidder",
              type: "address",
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "estimatedTime",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskWorkProof",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "submitted",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "approved",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "submittedAt",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tasks",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalreward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum BaseTask.TaskStatus",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "worker",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "terminateTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "totalPlatformRevenue",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unpause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updatePlatformFee",
          inputs: [
            {
              name: "_newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawPlatformRevenue",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "BiddingTaskCreated",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "deadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_BidSubmitted",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "bidder",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "estimatedTime",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_ProofOfWorkApproved",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_ProofOfWorkSubmitted",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_TaskCancelled",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_TaskPaid",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "BiddingTask_TaskWorkerAdded",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "worker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "DisputeResolverUpdated",
          inputs: [
            {
              name: "oldResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "newResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Paused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PlatformFeeUpdated",
          inputs: [
            {
              name: "oldFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RewardIncreased",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskDeadlineChanged",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDeadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Unpaused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WithdrawPlatformRevenue",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "BaseTask_InvalidDisputeResolver",
          inputs: [],
        },
        {
          type: "error",
          name: "BaseTask_InvalidTaskToken",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_BidDescriptionEmpty",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_DisputeTimeNotReached",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_InvalidBidAmount",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_InvalidBidIndex",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_NoProofOfWorkSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_ProofAlreadyApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_ProofNotSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_ProofOfWorkEmpty",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_TaskCannotBeCancelled",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_TaskDeadlinePassed",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_TaskNotCompleted",
          inputs: [],
        },
        {
          type: "error",
          name: "BiddingTask_TaskNotOpen",
          inputs: [],
        },
        {
          type: "error",
          name: "EnforcedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "ExpectedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "FeeTooHigh",
          inputs: [
            {
              name: "newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidDeadline",
          inputs: [],
        },
        {
          type: "error",
          name: "NoRevenueToWithdraw",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyTaskCreator",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OnlyTaskWorker",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "RewardMoreThanZero",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "TaskNotInProgress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        DenominatorFee: "contracts/BaseTask.sol",
        changedeadline: "contracts/BaseTask.sol",
        createTask: "contracts/BaseTask.sol",
        disputeResolver: "contracts/BaseTask.sol",
        getTask: "contracts/BaseTask.sol",
        owner: "contracts/BaseTask.sol",
        pause: "contracts/BaseTask.sol",
        paused: "contracts/BaseTask.sol",
        platformFee: "contracts/BaseTask.sol",
        renounceOwnership: "contracts/BaseTask.sol",
        taskCounter: "contracts/BaseTask.sol",
        taskToken: "contracts/BaseTask.sol",
        tasks: "contracts/BaseTask.sol",
        terminateTask: "contracts/BaseTask.sol",
        totalPlatformRevenue: "contracts/BaseTask.sol",
        transferOwnership: "contracts/BaseTask.sol",
        unpause: "contracts/BaseTask.sol",
        updatePlatformFee: "contracts/BaseTask.sol",
        withdrawPlatformRevenue: "contracts/BaseTask.sol",
      },
      deployedOnBlock: 4,
    },
    MilestonePaymentTask: {
      address: "0xd1F251a60513e7b15De8b236716f8DEB0A427379",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_taskToken",
              type: "address",
              internalType: "contract IERC20",
            },
            {
              name: "_disputeResolver",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "DenominatorFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "addMilestone",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_reward",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "addWorker",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_worker",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "approveMilestone",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "changedeadline",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "completeTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "completedMilestonesCount",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "createTask",
          inputs: [
            {
              name: "_title",
              type: "string",
              internalType: "string",
            },
            {
              name: "_description",
              type: "string",
              internalType: "string",
            },
            {
              name: "_deadline",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "disputeResolver",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IDisputeResolver",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "fileDisputeByWorker",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getMilestone",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct MilestonePaymentTask.Milestone",
              components: [
                {
                  name: "reward",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "paid",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "workProof",
                  type: "tuple",
                  internalType: "struct BaseTask.ProofOfWork",
                  components: [
                    {
                      name: "submitted",
                      type: "bool",
                      internalType: "bool",
                    },
                    {
                      name: "approved",
                      type: "bool",
                      internalType: "bool",
                    },
                    {
                      name: "submittedAt",
                      type: "uint256",
                      internalType: "uint256",
                    },
                    {
                      name: "proof",
                      type: "string",
                      internalType: "string",
                    },
                  ],
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getMilestonesCount",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "tuple",
              internalType: "struct BaseTask.Task",
              components: [
                {
                  name: "id",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "totalreward",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "deadline",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "status",
                  type: "uint8",
                  internalType: "enum BaseTask.TaskStatus",
                },
                {
                  name: "creator",
                  type: "address",
                  internalType: "address",
                },
                {
                  name: "worker",
                  type: "address",
                  internalType: "address",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "increaseMilestoneReward",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_reward",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "pause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "paused",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "payMilestone",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "platformFee",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "renounceOwnership",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "submitMilestoneProofOfWork",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_milestoneIndex",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "_proof",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "taskCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskMilestones",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "reward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "paid",
              type: "bool",
              internalType: "bool",
            },
            {
              name: "workProof",
              type: "tuple",
              internalType: "struct BaseTask.ProofOfWork",
              components: [
                {
                  name: "submitted",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "approved",
                  type: "bool",
                  internalType: "bool",
                },
                {
                  name: "submittedAt",
                  type: "uint256",
                  internalType: "uint256",
                },
                {
                  name: "proof",
                  type: "string",
                  internalType: "string",
                },
              ],
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "taskToken",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "contract IERC20",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "tasks",
          inputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "id",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "totalreward",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "deadline",
              type: "uint256",
              internalType: "uint256",
            },
            {
              name: "status",
              type: "uint8",
              internalType: "enum BaseTask.TaskStatus",
            },
            {
              name: "creator",
              type: "address",
              internalType: "address",
            },
            {
              name: "worker",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "terminateTask",
          inputs: [
            {
              name: "_taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "totalPlatformRevenue",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "transferOwnership",
          inputs: [
            {
              name: "newOwner",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "unpause",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "updatePlatformFee",
          inputs: [
            {
              name: "_newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdrawPlatformRevenue",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "DisputeResolverUpdated",
          inputs: [
            {
              name: "oldResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "newResolver",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTaskCreated",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "creator",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "title",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "deadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_DisputeFiledByWorker",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_MilestoneAdded",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "description",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "reward",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_MilestoneApproved",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_MilestonePaid",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_MilestoneRewardIncreased",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_ProofOfWorkSubmitted",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "milestoneIndex",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "proof",
              type: "string",
              indexed: false,
              internalType: "string",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_TaskCancelled",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_TaskCompleted",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "MilestonePaymentTask_TaskWorkerAdded",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: true,
              internalType: "uint256",
            },
            {
              name: "worker",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "OwnershipTransferred",
          inputs: [
            {
              name: "previousOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newOwner",
              type: "address",
              indexed: true,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Paused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "PlatformFeeUpdated",
          inputs: [
            {
              name: "oldFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newFee",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "RewardIncreased",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "TaskDeadlineChanged",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
            {
              name: "newDeadline",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "Unpaused",
          inputs: [
            {
              name: "account",
              type: "address",
              indexed: false,
              internalType: "address",
            },
          ],
          anonymous: false,
        },
        {
          type: "event",
          name: "WithdrawPlatformRevenue",
          inputs: [
            {
              name: "owner",
              type: "address",
              indexed: false,
              internalType: "address",
            },
            {
              name: "amount",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
        {
          type: "error",
          name: "BaseTask_InvalidDisputeResolver",
          inputs: [],
        },
        {
          type: "error",
          name: "BaseTask_InvalidTaskToken",
          inputs: [],
        },
        {
          type: "error",
          name: "EnforcedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "ExpectedPause",
          inputs: [],
        },
        {
          type: "error",
          name: "FeeTooHigh",
          inputs: [
            {
              name: "newFee",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "InvalidDeadline",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_DeadlinePassed",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_DisputeSubmissionPeriodNotReached",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_InvalidMilestoneIndex",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_InvalidWorkerAddress",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_MilestoneAlreadyApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_MilestoneAlreadyPaid",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_MilestoneNotApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_MilestoneNotSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_NoMilestonesDefined",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_NoProofOfWorkSubmitted",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_OnlyOneWorkerAllowed",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_ProofAlreadyApproved",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_ProofOfWorkEmpty",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_TaskCannotBeCancelled",
          inputs: [],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_TaskNotAddMileStone",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "MilestonePaymentTask_TaskNotOpen",
          inputs: [
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "NoRevenueToWithdraw",
          inputs: [],
        },
        {
          type: "error",
          name: "OnlyTaskCreator",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OnlyTaskWorker",
          inputs: [
            {
              name: "caller",
              type: "address",
              internalType: "address",
            },
            {
              name: "taskId",
              type: "uint256",
              internalType: "uint256",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableInvalidOwner",
          inputs: [
            {
              name: "owner",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "OwnableUnauthorizedAccount",
          inputs: [
            {
              name: "account",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "ReentrancyGuardReentrantCall",
          inputs: [],
        },
        {
          type: "error",
          name: "RewardMoreThanZero",
          inputs: [],
        },
        {
          type: "error",
          name: "SafeERC20FailedOperation",
          inputs: [
            {
              name: "token",
              type: "address",
              internalType: "address",
            },
          ],
        },
        {
          type: "error",
          name: "TaskNotInProgress",
          inputs: [],
        },
      ],
      inheritedFunctions: {
        DenominatorFee: "contracts/BaseTask.sol",
        changedeadline: "contracts/BaseTask.sol",
        createTask: "contracts/BaseTask.sol",
        disputeResolver: "contracts/BaseTask.sol",
        getTask: "contracts/BaseTask.sol",
        owner: "contracts/BaseTask.sol",
        pause: "contracts/BaseTask.sol",
        paused: "contracts/BaseTask.sol",
        platformFee: "contracts/BaseTask.sol",
        renounceOwnership: "contracts/BaseTask.sol",
        taskCounter: "contracts/BaseTask.sol",
        taskToken: "contracts/BaseTask.sol",
        tasks: "contracts/BaseTask.sol",
        terminateTask: "contracts/BaseTask.sol",
        totalPlatformRevenue: "contracts/BaseTask.sol",
        transferOwnership: "contracts/BaseTask.sol",
        unpause: "contracts/BaseTask.sol",
        updatePlatformFee: "contracts/BaseTask.sol",
        withdrawPlatformRevenue: "contracts/BaseTask.sol",
      },
      deployedOnBlock: 4,
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
