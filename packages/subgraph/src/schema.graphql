# User entities
type User @entity(immutable: false) {
  id: ID!
  address: Bytes!
  nft: UserNFT
  createdContent: [Content!]! @derivedFrom(field: "creator")
  contentPurchases: [ContentPurchase!]! @derivedFrom(field: "buyer")
  createdRentalProjects: [RentalProject!]! @derivedFrom(field: "creator")
  rentalProjectParticipants: [RentalProjectParticipant!]! @derivedFrom(field: "participant")
  proposals: [Proposal!]! @derivedFrom(field: "creator")
  votes: [Vote!]! @derivedFrom(field: "voter")
}

# User NFT entities
type UserNFT @entity(immutable: false) {
  id: ID!
  user: User!
  tokenId: BigInt!
  username: String!
  email: String!
  grade: String!
  createdAt: BigInt!
  updatedAt: BigInt!
}

enum UserGrade {
  Poor
  Good
  Excellent
}

# TaskToken entities
type TokenTransfer @entity(immutable: true) {
  id: ID!
  from: Bytes!
  to: Bytes!
  value: BigInt!
  timestamp: BigInt!
  blockNumber: BigInt!
  transactionHash: Bytes!
}

# ContentShare entities
type Content @entity(immutable: false) {
  id: ID!
  contentId: BigInt!
  creator: User!
  title: String!
  price: BigInt!
  createdAt: BigInt!
  updatedAt: BigInt!
  purchases: [ContentPurchase!]! @derivedFrom(field: "content")
}

type ContentPurchase @entity(immutable: true) {
  id: ID!
  content: Content!
  buyer: User!
  pricePaid: BigInt!
  userGrade: String!
  discountApplied: BigInt!
  timestamp: BigInt!
}

# CollectiveRental entities
type RentalProject @entity(immutable: false) {
  id: ID!
  projectId: BigInt!
  creator: User!
  description: String!
  depositPerPerson: BigInt!
  participantGoal: BigInt!
  currentParticipants: BigInt!
  deadline: BigInt!
  currentDeposits: BigInt!
  allowance: BigInt!
  alreadyWithdrawAmount: BigInt!
  completed: Boolean!
  isSuccessful: Boolean!
  participants: [RentalProjectParticipant!]! @derivedFrom(field: "project")
  proposals: [Proposal!]! @derivedFrom(field: "project")
  createdAt: BigInt!
  updatedAt: BigInt!
}

type RentalProjectParticipant @entity(immutable: true) {
  id: ID!
  project: RentalProject!
  participant: User!
  depositAmount: BigInt!
  joinedAt: BigInt!
}

# ProposalGovernance entities
type Proposal @entity(immutable: false) {
  id: ID!
  project: RentalProject!
  proposalId: BigInt!
  creator: User!
  description: String!
  amount: BigInt!
  voteDeadline: BigInt!
  executed: Boolean!
  passed: Boolean!
  yesVotesAmount: BigInt!
  noVotesAmount: BigInt!
  votes: [Vote!]! @derivedFrom(field: "proposal")
  createdAt: BigInt!
  executedAt: BigInt
}

type Vote @entity(immutable: true) {
  id: ID!
  proposal: Proposal!
  voter: User!
  support: Boolean!
  amount: BigInt!
  timestamp: BigInt!
}